=head1 NAME

MIME::Tools::changes - the MIME-tools change log


=head1 SYNOPSIS

This is part of the MIME-tools documentation.
See L<MIME::Tools> for the full table of contents.


=head1 DESCRIPTION


=head2 How the numbering works

You should read the numbers like this: Version 5.213 is
major version 5, minor version 2, patch level 13.
A jump in the major version means I've made big changes which
might not be backwards-compatible, so beware, and read the log!


=head2 The change log

=over 4


=item Version 6

I<My most profuse apologies to all who were inconvenienced by my
unexpected 2 year hiatus.  I'm back and applying patches like mad.  
This is just the first release.  Expect more as I unearth old
bug reports and patched from the depths of my inbox...>

B<Parser memory leak fixed.>
The closure-based task/benchmark mechanisms created for 5.5 
were leaking references like crazy.  That's been stopped.

	Relationship fails;
	   Closure is sought, yet tears fall:
	Memory lingers.

B<Better handling of truncated headers.>
If a header is truncated by a multipart boundary, no attempt is
made to parse a body after it.  This prevents bodies from getting "lost".

B<Made boundary-delimiter end-of-line sequence configurable in MIME::Entity .>
SOAP::MIME needs this ability, and now it has it:
I<Thanks to Byrne Reese for the patch.>

B<Incorporated MIMEdefang's patches to MIME::Words and MIME::Field::ParamVal .>
Way way way overdue. 
I<Thanks to the MIMEdefang team.>

B<Better documentation.>
The docs have been split into a number of relevant pages, all
referenced by the main MIME::Tools manpage.  It should now be easier
to find what you want, and ignore what you don't.

B<New logging facility.>
See L<MIME::Tools::diag> for details.



=item Version 5.503   (2001/09/07)

B<New modularized re-parsing architecture.>
The new MIME::Parser::Redoer framework now lets you cleanly extend
the parser by reparsing decoded files.  This is now how "uuencode"
embedded in "text/plain" is sniffed out.
See L<MIME::Parser::redoer()|MIME::Parser/redoer> for details.



=item Version 5.501   (2001/09/07)

B<NOTE:> I<all 5.5x releases should be regarded as developmental
Betas, working towards 5.6.  Here there be dragons.>

B<All decoding to bodies is done with binmode(1).>
The content-type is no longer considered, even for C<text/*>.
This is because charset makes all the difference in how to
handle newlines: C<charset=utf16> certainly should not output
a literal '\n' byte as anything but '\n'.  A last lingering
big of ISO-8859 bigotry, brought to my attention by our friends
in the Far East.

B<All bodyhandles open with binmode(1) by default.>
Binmode, binmode, everywhere... I'm hoping that this will make non-Unix
lives a little less confusing.

B<Tolerance of badly-specified encodings.>
We now tolerate "7-bit", "7_bit", and "7 bit" as synonyms of "7bit",
which is what $head-E<gt>effective_type returns.  Likewise for "8bit".

B<Fixed non-localized $_>.
A minor bug, but a bug nonetheless: $_ was not localized when
fetching a body.



=item Version 5.411   (2001/01/17)

B<Regenerated docs.>
Bug in HTML docs, now all fixed.

=item Version 5.410   (2000/11/23)

B<Better detection of evil filenames.>
Now we check for filenames which are suspiciously long,
and a new MIME::Filer::exorcise_filename() method is used
to try and remove the evil.
I<Thanks to Jason Haar for the suggestion.>


=item Version 5.409   (2000/11/12)

B<Added functionality to MIME::WordDecoder,>
including support for plain US-ASCII.

B<MIME::Tools::tmpopen()> made more flexible.
You can now override the tmpfile-opening behavior.


=item Version 5.408   (2000/11/10)

B<Added new Beta unmime() mechanism.>
See L<MIME::WordDecoder> for full details.
Also see L<"Understand how international characters are represented">.


=item Version 5.405   (2000/11/05)

B<Added a purge() that does what people want it to.>
Now, when a parse finishes and you want to delete everything that
was created by it, you can invoke C<purge()> on the parser's filer.
All files/directories created during the last parse should vanish.
I<Thanks to everyone who complained about MIME::Entity::purge.>


=item Version 5.404   (2000/11/04)

B<Added new automatic MIME-decoding of attachment filenames with
encoded (non-ASCII) characters.>
Hopefully this will do more good than harm.
The use of MIME::Parser::decode_headers() and MIME::Head::decode()
has been deprecated in favor of the new MIME::Words "unmime" mechanism.
Please see L<MIME::Words/unmime>.

B<Added tolerance for unquoted =?...?= in param values.>
This is in violation of the RFCs, but then, so are some MUAs.
I<Thanks to desti for bringing this to my attention.>

B<Fixed supposedly-bad B-encoding.>
I<Thanks to Otto Frost for bringing this to my attention.>


=item Version 5.316   (2000/09/21)

B<Increased tolerance in MIME::Parser.>
Now will ignore bogus POP3 "+OK" line before header, as well as bogus
mailbox "From " line (both with warnings).
I<Thanks to Antony OSullivan (ajos1) for suggesting this feature.>

B<Fixed small epilogue-related bug in MIME::Entity::print_body().>
Now it only outputs a final newline if the epilogue does not end
in one already.  Support for checking the preamble/epilogue in
regression tests was also added.
I<Thanks to Lars Hecking for bringing this issue up.>

B<Updated documentation.>
All module manual pages should now direct readers to the main
MIME-tools manual page.


=item Version 5.314   (2000/09/06)

Fixed Makefile.PL to have less-restrictive requirement
for File::Spec (0.6).


=item Version 5.313   (2000/09/05)

B<Fixed nasty bug with evil filenames.>
Certain evil filenames were getting replaced by internally-generated
filenames which were just as evil... ouch!  If your parser occasionally
throws a fatal exception with a "write-open" error message, then
you have this bug.
I<Thanks to Julian Field and Antony OSullivan (ajos1)
for delivering the evidence!>

       Beware the doctor
          who cures seasonal head cold
       by killing patient

B<Improved naming of extracted files.>
If a filename is regarded as evil, we guess that it might just
be because of part information, and attempt to find and use the
final path element.

B<Simplified message logging and made it more consistent.>
For details, see L<"Message-logging">.


=item Version 5.312   (2000/09/03)

B<Fixed a Perl 5.7 select() incompatibility>
which caused "make test" to fail.
I<Thanks to Nick Ing-Simmons for the patch.>


=item Version 5.311   (2000/08/16)

B<Blind fix for Win32 uudecoding bug.>
A missing binmode seems to be the culprit here; let's see if this fixes it.
I<Thanks to ajos1 for finding the culprit!>

       The carriage return
          thumbs its nose at me, laughing:
       DOS I/O *still* sucks


=item Version 5.310   (2000/08/15)

B<Fixed a bug in the back-compat output_prefix() method of MIME::Parser.>
Basically, output prefixes were not being set through this mechanism.
I<Thanks to ajos1 for the alert.>

	shift @_,                               ### "shift at-underscore"
	   or @_ will have
	bogus "self" object

B<Added some backcompat methods,> like parse_FH().
I<Thanks (and apologies) to Alain Kotoujansky.>

B<Added filenames-with-spaces support to MIME::Decoder::UU.>
I<Thanks to Richard Pun for the suggestion.>


=item Version 5.305   (2000/07/20)

B<Added MIME::Entity::parts_DFS> as convenient way to "get all parts".
I<Thanks to Xavier Armengou for suggesting this method.>

Removed the Alpha notice.
Still a few features to tweak, but those will be minor.


=item Version 5.303   (2000/07/07)

B<Fixed output bugs in new Filers>.
Scads of them: bad handling of filename collisions, bad implementation
of output_under(), bad linking to results, POD errors, you name it.
If this had gone to CPAN, I'd have issued a factory recall. C<:-(>

       Errors, like beetles,
          Multiply ferociously
       In the small hours


=item Version 5.301   (2000/07/06)

B<READ ME BEFORE UPGRADING PAST THIS POINT!>
B<New MIME::Parser::Filer class -- not fully backwards-compatible.>
In response to demand for more-comprehensive file-output strategies,
I have decided that the best thing to do is to split all the
file-output logic (output_path(), evil_filename(), etc.)
into its own separate class, inheriting from the new
L<MIME::Parser::Filer|MIME::Parser::Filer> class.
If you I<override> any of the following in a MIME::Parser subclass,
you will need to change your code accordingly:

	evil_filename
	output_dir
	output_filename
	output_path
	output_prefix
	output_under

My sincere apologies for any inconvenience this will cause, but
it's ultimately for the best, and is quite likely the last structural
change to 5.x.
I<Thanks to Tyson Ackland for all the ideas.>
Incidentally, the new code also fixes a bug where identically-named
files in the same message could clobber each other.

       A message arrives:
           "Here are three files, all named 'Foo'"
       Only one survives.  :-(

B<Fixed bug in MIME::Words header decoding.>
Underscores were not being handled properly.
I<Thanks to Dominique Unruh and Doru Petrescu,> who independently
submitted the same fix within 2 hours of each other, after this
bug has lain dormant for months:

       Two users, same bug,
          same patch -- mere hours apart:
       Truly, life is odd.

B<Removed escaping of underscore in regexps.>
Escaping the underscore (\_) in regexps was sloppy and wrong
(escaped metacharacters may include anything in \w), and the newest
Perls warn about it.
I<Thanks to David Dyck for bringing this to my attention.>

       What, then, is a word?
	  Some letters, digits, and, yes:
       Underscores as well

B<Added Force option to MIME::Entity's make_multipart>.
I<Thanks to Bob Glickstein for suggesting this.>

B<Numerous fixlets to example code.>
I<Thanks to Doru Petrescu for these.>

B<Added REQUIREMENTS section in docs.>
Long-overdue.  I<Thanks to Ingo Schmiegel for motivating this.>


=item Version 5.211   (2000/06/24)

B<Fixed auto-uudecode bug.>
Parser was failing with "part did not end with expected boundary" error
when uuencoded entity was a I<singlepart> message (ironically,
uuencoded parts of multiparts worked fine).
I<Thanks to Michael Mohlere for testing uudecode and finding this.>

       The hurrying bee
          Flies far for nectar, missing
       The nearest flowers

       Say ten thousand times:
          Complex cases may succeed
       Where simple ones fail

B<Parse errors now generate warnings.>
Parser errors now cause warn()s to be generated if they are
not turned into fatal exceptions.  This might be a little redundant,
seeing as they are available in the "results", but parser-warnings
already cause warn()s.  I can always put in a "quiet" switch if
people complain.

B<Miscellaneous cleanup.>
Documentation of MIME::Parser improved slightly, and a redundant
warning was removed.


=item Version 5.210   (2000/06/20)

B<Change in "evil" filename.>
Made MIME::Parser's evil_filename stricter by having it reject
"path" characters: any of '/' '\' ':' '[' ']'.

       Just as with beauty
	  The eye of the beholder
       Is where "evil" lives.

B<Documentation fixes.>
Corrected a number of docs in MIME::Entity which were obsoleted
in the transition from 4.x to 5.x.
I<Thanks to Michael Fischer for pointing these out.>
For this one, a special 5-5-5-5 Haiku of anagrams:

       Documentation
	  in mutant code, O!
       Edit -- no, CUT! [moan]
	  I meant to un-doc...

B<IO::Lines usage bug fixed.>
MIME::Entity was missing a "use IO::Lines", which caused an
exception when you tried to use the body() method of MIME::Entity.
I<Thanks to Hideyo Imazu and Michael Fischer for pointing this out.>

       Bareword looks fine, but
          Perl cries: "Whoa there... IO::Lines?
       Never heard of it."


=item Version 5.209   (2000/06/10)

B<Autodetection of uuencode.>
You can now tell the parser to hunt for uuencode inside what should
be text parts.
See L<extract_uuencode()|MIME::Parser/extract_uuencode> for full details.
B<Beware:> this is largely untested at the moment.
I<Special thanks to Michael Mohlere at ADJE Webmail, who was the
  first -- and most-insistent -- user to request this feature.>

B<Faster parsing.>
Sped up the MIME::Decoder::NBit decoder quite a bit by using a variant
of the chunking trick I used for MIME::Decoder::Base64.  I suspect
that the same trick (reading a big chunk plus the next line to get a
big block of lines) would work with MIME::Decoder::QuotedPrint, but I
don't have the time or resources to check that right now (tested
contributions would be welcome).  NBit encoding is more-conveniently
done line-by-line for now, because individual line lengths must be
checked.

B<Better use of core.>
MIME::Body::InCore is now used when you build() an entity with
the Data parameter, instead of MIME::Body::Scalar.

B<More documentation> on toolkit configuration.


=item Version 5.207   (2000/06/09)

B<Fixed whine() bug in MIME::Parser> where the "warning" method
whine() was called as a static function instead of invoked as an
instance method.
I<Thanks to Todd A. Bradfute for reporting this.>

       A simple warning
          Invokes method as function:
       "Warning" makes us die


=item Version 5.206   (2000/06/08)

Ahem.  Cough cough:

       Way too many bugs
          Thus, a self-imposed penance:
       Write haiku for each

B<Fixed bug in MIME::Parser:> the reader was not handling the odd
(but legal) case where a multipart boundary is followed by linear
whitespace.
I<Thanks to Jon Agnew for reporting this with the RFC citation.>

       Legal message fails
          And 'round the globe, thousands cry:
       READ THE RFC

Empty preambles are now handled properly by MIME::Entity when
printing: there is now no space between the header-terminator
and the initial boundary.
I<Thanks to "sen_ml" for suggesting this.>

       Nature hates vacuum
          But please refrain from tossing
       Newlines in the void

Started using Benchmark for benchmarking.


=item Version 5.205   (2000/06/06)

Added terminating newline to all parser messages, and fixed
small parser bug that was dropping parts when errors occurred
in certain places.


=item Version 5.203   (2000/06/05)

Brand new parser based on new (private) MIME::Parser::Reader and
(public) MIME::Parser::Results.  Fast and yet simple and very tolerant
of bad MIME when desired.  Message reporting needs some muzzling.

MIME::Parser now has ignore_errors() set true by default.


=item Version 5.116   (2000/05/26)

Removed Tmpfile.t test, which was causing a bogus failure in
"make test".  Now we require 5.004 for MIME::Parser anyway,
so we don't need it.  I<Thanks to Jonathan Cohn for reporting this.>


=item Version 5.115   (2000/05/24)

Fixed Ref.t bug, and documented how to remove parts from a MIME::Entity.


=item Version 5.114   (2000/05/23)

Entity now uses MIME::Lite-style default suggested encoding.

More regression test have been added, and the "Size" tests in
Ref.t are skipped for text document (due to CRLF differences
between platforms).


=item Version 5.113   (2000/05/21)

B<Major speed and structural improvements to the parser.>
    I<Major, MAJOR thanks to Noel Burton-Krahn, Jeremy Gilbert,
      and Doru Petrescu for all the patches, benchmarking,
      and Beta-testing!>

B<Convenient new one-directory-per-message parsing mechanism.>
    Now through C<MIME::Parser> method C<output_under()>,
    you can tell the parser that you want it to create
    a unique directory for each message parsed, to hold the
    resulting parts.

B<Elimination of $', $` and $&.>
    Wow... I still can't believe I missed this.  D'OH!
    I<Thanks to Noel Burton-Krahn for all his patches.>

B<Parser is more tolerant of weird EOL termination.>
    Some mailagents are can terminate lines with "\r\r\n".
    We're okay with that now when we extract the header.
    I<Thanks to Joao Fonseca for pointing this out.>

B<Parser is tolerant of "From " lines in headers.>
    I<Thanks to Joachim Wieland, Anthony Hinsinger, Marius Stan,
      and numerous others.>

B<Parser catches syntax errors in headers.>
    I<Thanks to Russell P. Sutherland for catching this.>

B<Parser no longer warns when subtype is undefined.>
    I<Thanks to Eric-Olivier Le Bigot for his fix.>

B<Better integration with Mail::Internet.>
    For example, smtpsend() should work fine.
    I<Thanks to Michael Fischer and others for the patch.>

B<Miscellaneous cleanup.>
    I<Thanks to Marcus Brinkmann for additional helpful input.>
    I<Thanks to Klaus Seidenfaden for good feedback on 5.x Alpha!>




=item Version 4.123   (1999/05/12)

Cleaned up some of the tests for non-Unix OS'es.
Will require a few iterations, no doubt.


=item Version 4.122   (1999/02/09)

B<Resolved CORE::open warnings for 5.005.>
        I<Thanks to several folks for this bug report.>


=item Version 4.121   (1998/06/03)

B<Fixed MIME::Words infinite recursion.>
        I<Thanks to several folks for this bug report.>


=item Version 4.117   (1998/05/01)

B<Nicer MIME::Entity::build.>
        No longer outputs warnings with undefined Filename, and now
        accepts Charset as well.
	I<Thanks to Jason Tibbits III for the inspirational patch.>

B<Documentation fixes.>
        Hopefully we've seen the last of the pod2man warnings...

B<Better test logging.>
        Now uses ExtUtils::TBone.


=item Version 4.116   (1998/02/14)

B<Bug fix:>
        MIME::Head and MIME::Entity were not downcasing the
        content-type as they claimed.  This has now been fixed.
	I<Thanks to Rodrigo de Almeida Siqueira for finding this.>


=item Version 4.114   (1998/02/12)

B<Gzip64-encoding has been improved, and turned off as a default,>
	since it depends on having gzip installed.
        See MIME::Decoder::Gzip64 if you want to activate it in your app.
	You can	now set up the gzip/gunzip commands to use, as well.
	I<Thanks to Paul J. Schinder for finding this bug.>


=item Version 4.113   (1998/01/20)

B<Bug fix:>
        MIME::ParserBase was accidentally folding newlines in header fields.
	I<Thanks to Jason L. Tibbitts III for spotting this.>


=item Version 4.112   (1998/01/17)

B<MIME::Entity::print_body now recurses> when printing multipart
	entities, and prints "everything following the header."  This is more
	likely what people expect to happen.  PLEASE read the
        "two body problem" section of MIME::Entity's docs.


=item Version 4.111   (1998/01/14)

Clean build/test on Win95 using 5.004.  Whew.


=item Version 4.110   (1998/01/11)

B<Added> make_multipart() and make_singlepart() in MIME::Entity.

B<Improved> handling/saving of preamble/epilogue.


=item Version 4.109   (1998/01/10)

=over 4

=item Overall

B<Major version shift to 4.x>
	accompanies numerous structural changes, and
	the deletion of some long-deprecated code.  Many apologies to those
	who are inconvenienced by the upgrade.

B<MIME::IO deprecated.>
	You'll see IO::Scalar, IO::ScalarArray, and IO::Wrap
	to make this toolkit work.

B<MIME::Entity deep code.>
	You can now deep-copy MIME entities (except for on-disk data files).


=item Encoding/decoding

B<MIME::Latin1 deprecated, and 8-to-7 mapping removed.>
	Really, MIME::Latin1 was one of my more dumber ideas.
	It's still there, but if you want to map 8-bit characters to
	Latin1 ASCII approximations when 7bit encoding, you'll have to
	request it explicitly.	I<But use quoted-printable for your 8-bit
	documents; that's what it's there for!>

B<7bit and 8bit "encoders" no longer encode.>
	As per RFC-2045, these just do a pass-through of the data,
	but they'll warn you if you send bad data through.

B<MIME::Entity suggests encoding.>
	Now you can ask MIME::Entity's build() method to "suggest"
	a legal encoding based on the body and the content-type.
	No more guesswork!  See the "mimesend" example.

B<New module structure for MIME::Decoder classes.>
	It should be easier for you to see what's happening.

B<New MIME decoders!>
	Support added for decoding C<x-uuencode>, and for
	decoding/encoding C<x-gzip64>.  You'll need "gzip" to make
	the latter work.

B<Quoted-printable back on track... and then some.>
	The 'quoted-printable' decoder now uses the newest MIME::QuotedPrint,
	and amends its output with guideline #8 from RFC2049 (From/.).
	I<Thanks to Denis N. Antonioli for suggesting this.>

=item Parsing

B<Preamble and epilogue are now saved.>
	These are saved in the parsed entities as simple
	string-arrays, and are output by print() if there.
	I<Thanks to Jason L. Tibbitts for suggesting this.>

B<The "multipart/digest" semantics are now preserved.>
	Parts of digest messages have their mime_type() defaulted
	to "message/rfc822" instead of "text/plain", as per the RFC.
	I<Thanks to Carsten Heyl for suggesting this.>

=item Output

B<Well-defined, more-complete print() output.>
	When printing an entity, the output is now well-defined if the
	entity came from a MIME::Parser, even if using parse_nested_messages.
	See MIME::Entity for details.

B<You can prevent recommended filenames from being output.>
	This possible security hole has been plugged; when building MIME
	entities, you can specify a body path but suppress the filename
	in the header.
	I<Thanks to Jason L. Tibbitts for suggesting this.>

=item Bug fixes

B<Win32 installations should work.>
	The binmode() calls should work fine on Win32 now.
	I<Thanks to numerous folks for their patches.>

B<MIME::Head::add()> now no longer downcases its argument.
	I<Thanks to Brandon Browning & Jason L. Tibbitts for finding this bug.>

=back






=item Version 3.204

B<Bug in MIME::Head::original_text fixed.>
	Well, it took a while, but another bug surfaced from my transition
	from 1.x to 2.x.  This method was, quite idiotically, sorting the
	header fields.
	I<Thanks, as usual, to Andreas Koenig for spotting this one.>

B<MIME::ParserBase no longer defaults to RFC-1522-decoding headers.>
	The documentation correctly stated that the default setting was
	to I<not> RFC-1522-decode the headers.  The code, on the other hand,
	was init'ing this parser option in the "on" position.
	This has been fixed.

B<MIME::ParserBase::parse_nested_messages reexamined.>
	If you use this feature, please re-read the documentation.
	It explains a little more precisely what the ramifications are.

B<MIME::Entity tries harder to ensure MIME compliance.>
	It is now a fatal error to use certain bad combinations of content
	type and encoding when "building", or to attempt to "attach" to
	anything that is not a multipart document.  My apologies if this
	inconveniences anyone, but it was just too darn easy before for folks
	to create bad MIME, and gosh darn it, good libraries should at least
	I<try> to protect you from mistakes.

B<The "make" now halts if you don't have the right stuff,>
	provided your MakeMaker supports PREREQ_PM.  See L<"REQUIREMENTS">
	for what you need to install this package.  I still provide
	old courtesy copies of the MIME:: decoding modules.
I<Thanks to Hugo van der Sanden for suggesting this.>

B<The "make test" is far less chatty.>
	Okay, okay, STDERR is evil.  Now a C<"make test"> will just give you
	the important stuff: do a C<"make test TEST_VERBOSE=1"> if you want
	the gory details (advisable if sending me a bug report).
I<Thanks to Andreas Koenig for suggesting this.>


=item Version 3.203

B<No, there haven't been any major changes between 2.x and 3.x.>
	The major-version increase was from a few more tweaks to get $VERSION
	to be calculated better and more efficiently (I had been using RCS
	version numbers in a way which created problems for users of CPAN::).
	After a couple of false starts, all modules have been upgraded to RCS
	3.201 or higher.

B<You can now parse a MIME message from a scalar,>
	an array-of-scalars, or any MIME::IO-compliant object (including IO::
	objects.)  Take a look at parse_data() in MIME::ParserBase.  The
	parser code has been modified to support the MIME::IO interface.
	I<Thanks to fellow Chicagoan Tim Pierce (and countless others)
	for asking.>

B<More sensible toolkit configuration.>
	A new config() method in MIME::ToolUtils makes a lot of toolkit-wide
	configuration cleaner.  Your old calls will still work, but with
	deprecation warnings.

B<You can now sign messages> just like in Mail::Internet.
	See MIME::Entity for the interface.

B<You can now remove signatures from messages> just like in Mail::Internet.
	See MIME::Entity for the interface.

B<You can now compute/strip content lengths>
	and other non-standard MIME fields.
	See sync_headers() in MIME::Entity.
	I<Thanks to Tim Pierce for bringing the basic problem to my attention.>

B<Many warnings are now silent unless $^W is true.>
	That means unless you run your Perl with C<-w>, you won't see
        deprecation warnings, non-fatal-error messages, etc.
        But of course you run with C<-w>, so this doesn't affect you.  C<:-)>

B<Completed the 7-bit encodings in MIME::Latin1.>
	We hadn't had complete coverage in the conversion from 8- to 7-bit;
	now we do. I<Thanks to Rolf Nelson for bringing this to my attention.>

B<Fixed broken parse_two() in MIME::ParserBase.>
	BTW, if your code worked with the "broken" code, it should I<still>
	work.
	I<Thanks again to Tim Pierce for bringing this to my attention.>


=item Version 2.14

Just a few bug fixes to improve compatibility with Mail-Tools 1.08,
and with the upcoming Perl 5.004 release.
I<Thanks to Jason L. Tibbitts III for reporting the problems so quickly.>


=item Version 2.13

=over 4

=item New features

B<Added RFC-1522-style decoding of encoded header fields.>
	Header decoding can now be done automatically during parsing via the
	new C<decode()> method in MIME::Head... just tell your parser
	object that you want to C<decode_headers()>.
	I<Thanks to Kent Boortz for providing the idea, and the baseline
	RFC-1522-decoding code!>

B<Building MIME messages is even easier.>
	Now, when you use MIME::Entity's C<build()> or C<attach()>,
	you can also supply individual
	mail headers to set (e.g., C<-Subject>, C<-From>, C<-To>).

Added C<Disposition> to MIME::Entity's C<build()> method.
	I<Thanks to Kurt Freytag for suggesting this feature.>

An C<X-Mailer> header is now output
	by default in all MIME-Entity-prepared messages,
	so any bad MIME we generate can be traced back to this toolkit.

Added C<purge()> method to MIME::Entity for deleteing leftover files.
	I<Thanks to Jason L. Tibbitts III for suggesting this feature.>

Added C<seek()> and C<tell()> methods to built-in MIME::IO classes.
	Only guaranteed to work when reading!
	I<Thanks to Jason L. Tibbitts III for suggesting this feature.>

When parsing a multipart message with apparently no boundaries,
	the error message you get has been improved.
	I<Thanks to Andreas Koenig for suggesting this.>

=item Bug fixes

B<Patched over a Perl 5.002 (and maybe earlier and later) bug involving
FileHandle::new_tmpfile.>  It seems that the underlying filehandles
were not being closed when the FileHandle objects went out of scope!
There is now an internal routine that creates true FileHandle
objects for anonymous temp files.
I<Thanks to Dragomir R. Radev and Zyx for reporting the weird behavior
that led to the discovery of this bug.>

MIME::Entity's C<build()> method now warns you if you give it an illegal
boundary string, and substitutes one of its own.

MIME::Entity's C<build()> method now generates safer, fully-RFC-1521-compliant
boundary strings.

Bug in MIME::Decoder's C<install()> method was fixed.
I<Thanks to Rolf Nelson and Nickolay Saukh for finding this.>

Changed FileHandle::new_tmpfile to FileHandle->new_tmpfile, so some
Perl installations will be happier.
I<Thanks to Larry W. Virden for finding this bug.>

Gave C<=over> an arg of 4 in all PODs.
I<Thanks to Larry W. Virden for pointing out the problems of bare =over's>

=back


=item Version 2.04

B<A bug in MIME::Entity's output method was corrected.>
MIME::Entity::print now outputs everything to the desired filehandle
explicitly.
I<Thanks to Jake Morrison for pointing out the incompatibility
with Mail::Header.>


=item Version 2.03

B<Fixed bug in autogenerated filenames> resulting from transposed "if"
statement in MIME::Parser, removing spurious printing of header as well.
(Annoyingly, this bug is invisible if debugging is turned on!)
I<Thanks to Andreas Koenig for bringing this to my attention.>

Fixed bug in MIME::Entity::body() where it was using the bodyhandle
completely incorrectly.
I<Thanks to Joel Noble for bringing this to my attention.>

Fixed MIME::Head::VERSION so CPAN:: is happier.
I<Thanks to Larry Virden for bringing this to my attention.>

Fixed undefined-variable warnings when dumping skeleton
(happened when there was no Subject: line)
I<Thanks to Joel Noble for bringing this to my attention.>


=item Version 2.02

B<Stupid, stupid bugs in both BASE64 encoding and decoding were fixed.>
I<Thanks to Phil Abercrombie for locating them.>


=item Version 2.01

B<Modules now inherit from the new Mail:: modules!>
This means big changes in behavior.

B<MIME::Parser can now store message data in-core.>
There were a I<lot> of requests for this feature.

B<MIME::Entity can now compose messages.>
There were a I<lot> of requests for this feature.

Added option to parse C<"message/rfc822"> as a pseduo-multipart document.
I<Thanks to Andreas Koenig for suggesting this.>





=item Version 1.13

MIME::Head now no longer requires space after ":", although
either a space or a tab after the ":" will be swallowed
if there.
I<Thanks to Igor Starovoitov for pointing out this shortcoming.>

=item Version 1.12

Fixed bugs in parser where CRLF-terminated lines were
blowing out the handling of preambles/epilogues.
I<Thanks to Russell Sutherland for reporting this bug.>

Fixed idiotic is_multipart() bug.
I<Thanks to Andreas Koenig for noticing it.>

Added untested binmode() calls to parser for DOS, etc.
systems.  No idea if this will work...

Reorganized the output_path() methods to allow easy use
of inheritance, as per Achim Bohnet's suggestion.

Changed MIME::Head to report mime_type more accurately.

POSIX module no longer loaded by Parser if perl >= 5.002.
Hey, 5.001'ers: let me know if this breaks stuff, okay?

Added unsupported ./examples directory.

=item Version 1.11

Converted over to using Makefile.PL.
I<Thanks to Andreas Koenig for the much-needed kick in the pants...>

Added t/*.t files for testing.  Eeeeeeeeeeeh...it's a start.

Fixed bug in default parsing routine for generating
output paths; it was warning about evil filenames if
there simply I<were> no recommended filenames.  D'oh!

Fixed redefined parts() method in Entity.

Fixed bugs in Head where field name wasn't being case folded.

=item Version 1.10

A typo was causing the epilogue of an inner multipart
message to be swallowed to the end of the OUTER multipart
message; this has now been fixed.
I<Thanks to Igor Starovoitov for reporting this bug.>

A bad regexp for parameter names was causing
some parameters to be parsed incorrectly; this has also
been fixed.
I<Thanks again to Igor Starovoitov for reporting this bug.>

It is now possible to get full control of the filenaming
algorithm before output files are generated, and the default
algorithm is safer.
I<Thanks to Laurent Amon for pointing out the problems, and suggesting
some solutions.>

Fixed illegal "simple" multipart test file.  D'OH!

=item Version 1.9

No changes: 1.8 failed CPAN registration

=item Version 1.8

Fixed incompatibility with 5.001 and FileHandle::new_tmpfile
Added COPYING file, and improved README.

=back




=head1 SEE ALSO

See L<MIME::Tools/SYNOPSIS> for the full table of contents

